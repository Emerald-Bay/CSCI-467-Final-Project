import os
import torch
import torch.nn as nn
import torch.nn.functional as F
import numpy as np
from time import time

# global variables
size_features = 1000

def read_files_from_folder(folder_path, num_files_to_read):
    file_names = []
    
    # Iterate over the files in the specified folder
    for file_name in os.listdir(folder_path):
        if os.path.isfile(os.path.join(folder_path, file_name)):
            file_names.append(os.path.join(folder_path, file_name))
    
    # Sort the file names to ensure a consistent order
    file_names.sort()

    # Limit the number of files to read
    files_read = 0
    for file_name in file_names:
        # Read the file or perform any other desired operation
        print("Reading file:", file_name)

        # Increment the count of files read
        files_read += 1

        # Check if we have reached the specified limit
        if files_read >= num_files_to_read:
            break

def main():
    folder_path = "ADD_PATHWAY_TO_DATASET"
    num_files_to_read = 5

    read_files_from_folder(folder_path, num_files_to_read)

    # Timing code
    start = time()
    # Your code here
    stop = time()
    elapsed_time = (stop - start) * 1e9  # in nanoseconds
    print("Time is", elapsed_time, "ns")

if __name__ == "__main__":
    main()
